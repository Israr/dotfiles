
function! ToggleNumber()
    let s:isThereNumber = &nu
    let s:isThereRelativeNumber = &relativenumber
    if s:isThereNumber && s:isThereRelativeNumber
        set paste!
        set nonumber
        set norelativenumber
    else
        set paste!
        set number
        set relativenumber
    endif
endf

function! ToggleBG()
    let s:tbg = &background
    " Inversion
    if s:tbg == "dark"
        set background=light
    else
        set background=dark
    endif
endfunction

function! ToggleSyntaxHighlighthing()
    if exists('g:syntax_on')
        syntax off
    else
        syntax enable
    endif
endfunction

function! ToggleWrap()
    if &wrap
        set list
        set nowrap
    else
        set nolist
        set wrap
    endif
endfunction


function! DeleteMultipleEmptyLines()
    g/^\_$\n\_^$/d
endfunction

function! StripTrailingWhitespace()
    let l:save = winsaveview()
    %s/\s\+$//e
    call winrestview(l:save)
endfunction
"augroup StripTrailingWhitespace
    "autocmd!
    "autocmd FileType c,cpp,cfg,conf,css,html,perl,python,sh,tex,yaml
        "\ autocmd BufWritePre <buffer> :call
        "\ StripTrailingWhitespace()
"augroup END

function! ToggleTagbar()
    execute ":TagbarToggle"
endfunction


